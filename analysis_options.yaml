# InvoicePe Pragmatic Analysis Options - InvoicePe's "Fix Errors First" Approach
# Focus: ERRORS that break builds, ignore style noise until foundation is solid
# Strategy: Get to ZERO ERRORS, then gradually add back style rules

include: package:very_good_analysis/analysis_options.yaml

analyzer:
  # Treat missing required parameters as errors
  strong-mode:
    implicit-casts: false
    implicit-dynamic: false

  # Exclude generated files from analysis
  exclude:
    - "**/*.g.dart"
    - "**/*.freezed.dart"
    - "**/*.gr.dart"
    - "**/generated_plugin_registrant.dart"
    - "lib/generated/**"
    - "build/**"
    - ".dart_tool/**"

  # Enable additional error checking
  errors:
    # Treat these as errors instead of warnings
    invalid_annotation_target: error
    missing_required_param: error
    missing_return: error
    dead_code: error
    unused_import: error
    unused_local_variable: error

  # Language features (Temporarily relaxed to focus on critical errors)
  language:
    strict-casts: false
    strict-inference: false
    strict-raw-types: false

linter:
  rules:
    # === CRITICAL LINT RULES ONLY (Build Quality) ===
    # Focus on lint rules that prevent runtime crashes/performance issues
    avoid_dynamic_calls: true
    unrelated_type_equality_checks: true

    # === TEMPORARILY DISABLED (Style Noise) ===
    # Re-enable these after foundation is fixed
    lines_longer_than_80_chars: false
    always_use_package_imports: false
    directives_ordering: false
    avoid_redundant_argument_values: false
    prefer_int_literals: false
    unawaited_futures: false
    avoid_void_async: false
    prefer_single_quotes: false
    require_trailing_commas: false
    prefer_const_constructors: false
    prefer_const_literals_to_create_immutables: false
    avoid_print: false
    always_declare_return_types: false
    annotate_overrides: false
    public_member_api_docs: false
